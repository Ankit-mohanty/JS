/* ! NEW CSS FEATURES */
/* ? The border line css property is a shorthand property is setting individuals logical block border properties values in a single place in the style sheet. */

/*
border- line : 1px solid red 

The property is shorthand for the following these properties..
border-inline-color 
border-inline-style
border-inline-width
 */

/* ? the border block css property is shorthand property for setting individual logical border in a single place in a style sheet   */

/* ? CSS Nesting: The css nesting module defines a syntax for nesting selector, providing the ability to nest one style rule another, With the selector of the child rule relative to the selector of the parent rule. */

/* ? The writing mode property is specifies weather the lines of text laid out horizontally or vertically. */

@import url("https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&family=EB+Garamond:ital,wght@0,400..800;1,400..800&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&family=Lobster&family=Playfair+Display+SC:ital,wght@0,400;0,700;0,900;1,400;1,700;1,900&family=Playwrite+CU:wght@100..400&display=swap");

* {
  margin: 10px;
  padding: 0;
  box-sizing: 0;
  font-family: "Libre Baskerville", serif;
}

body {
  background-color: black;
  color: var(--text-color);
  height: 0vh;
}
.container {
  height: 0vh;
  max-width: 82.5rem;
  padding: 4rem 0;
  margin: 0 auto;
  display: grid;
  align-items: center;
}
.grid {
  display: grid;
  align-items: center;
  gap: 6.4rem;
}
.grid-two-column {
  display: grid;
  align-items: center;
  gap: 6.4rem;
  grid-template-columns: repeat(2, 1fr);
}
/* 
.hero-content h1 {
  text-align: left;
  font-size: 2rem;
  /* border: 2px dotted aqua; */
/* border-top: 2px solid red;
border-bottom: 2px solid red; */
/* ? instead of write the border top and border bottom we can write the border block */
/* border-block: 2px solid red; */
/* border-right: 2px solid yellow;
border-left: 2px solid yellow; */
/* ? in new css we can consider left and right as the border-inline */
/* border-inline: 2px solid yellow; */
/* } */

/* .hero-content p {
  font-size: 0.75rem;
  letter-spacing: 0.063rem;
  margin: 2rem 0 4rem 0;
  color: aqua;
} */

/** instead of target h1 and p two time we can use css nesting  */
.hero-content {
  h1 {
    text-align: left;
    font-size: 2rem;
    color: white;
    /* ? instead of write the border top and border bottom we can write the border block */
    border-block: 2px solid red;

    /* ? in new css we can consider left and right as the border-inline */
    border-inline: 2px solid yellow;


    /* Of we use before after in this cases we are bound to use th "&" */
    /* &::before {
    content: "*";
    } */

    /* writing-mode: vertical-rl; */
  }

  p {
    font-size: 0.75rem;
    letter-spacing: 0.063rem;
    margin: 2rem 0 4rem 0;
    color: aqua;
    justify-content: center;
  }
}

.para-class {
  color: bisque !important;
}

img {
  width: 50%;
  height: auto;
  filter: drop-shadow(0.313rem 0.313rem 0.625rem var(--main-color));
}

.hero-content a {
  color: var(--text-color);
  color: black;
}

.hero-content a:link {
  background-color: var(--main-color);
  color: var(--text-color);
  display: inline-block;
  padding: 0.625rem 2rem;
  text-transform: capitalize;
  text-decoration: none;
  border-radius: 0.313rem;
  font-size: 1.5rem;
  font-weight: bold;
}

:root {
  --main-color: white;
  --text-color: red !important;
}
